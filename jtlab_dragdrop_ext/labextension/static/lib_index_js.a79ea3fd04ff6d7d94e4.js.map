{"version":3,"file":"lib_index_js.a79ea3fd04ff6d7d94e4.js","mappings":";;;;;;;;;;;;;AAGA;;GAEG;AACH,MAAM,MAAM,GAAgC;IAC1C,EAAE,EAAE,2BAA2B;IAC/B,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,GAAoB,EAAE,EAAE;QACjC,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;QAExD,iFAAiF;QACjF,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;YACrB,oEAAoE;YACpE,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC1C,IAAI,WAAW,GAAkB,IAAI,CAAC;YAEtC,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;YAC5B,OAAO,MAAM,EAAE;gBACb,IAAI,MAAM,CAAC,EAAE,KAAK,aAAa,EAAE;oBAC/B,WAAW,GAAG,MAAM,CAAC;oBACrB,MAAM;iBACP;gBACD,MAAM,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;aACzB;YAED,IAAI,WAAW,EAAE;gBACf,+CAA+C;gBAC/C,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAC/B,MAAM,EACN,CAAC,KAAK,EAAE,EAAE;oBACR,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;oBACrC,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBAC1B,CAAC,EACD,IAAI,CACL,CAAC;aACH;iBAAM;gBACL,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAC;AAEF,iEAAe,MAAM,EAAC","sources":["webpack://jtlab-dragdrop-ext/./src/index.ts"],"sourcesContent":["import { JupyterFrontEnd, JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { Widget } from '@lumino/widgets';\n\n/**\n * Initialization data for the disable-drag-and-drop extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jtlab-dragdrop-ext:plugin',\n  autoStart: true,\n  activate: (app: JupyterFrontEnd) => {\n    console.log('Disabling drag-and-drop in File Browser.');\n\n    // Wait until the application is ready and the file browser is added to the shell\n    app.restored.then(() => {\n      // Iterate through widgets in the left area to find the file browser\n      const widgets = app.shell.widgets('left');\n      let fileBrowser: Widget | null = null;\n\n      let widget = widgets.next();\n      while (widget) {\n        if (widget.id === 'filebrowser') {\n          fileBrowser = widget;\n          break;\n        }\n        widget = widgets.next();\n      }\n\n      if (fileBrowser) {\n        // Add event listeners to disable drag and drop\n        fileBrowser.node.addEventListener(\n          'drop',\n          (event) => {\n            console.log('Drop event prevented.');\n            event.preventDefault();\n            event.stopPropagation();\n          },\n          true\n        );\n      } else {\n        console.warn('File browser widget not found.');\n      }\n    });\n  },\n};\n\nexport default plugin;"],"names":[],"sourceRoot":""}